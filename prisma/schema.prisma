// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String              @id @default(uuid())
  first_name          String
  last_name           String?
  email               String              @unique
  password            String
  contact_number      String?
  profile_pic         String?
  status              UserStatus          @default(ACTIVE)
  role                UserRole            @default(USER)
  is_deleted          Boolean             @default(false)
  password_changed_at DateTime            @default(now())
  created_at          DateTime            @default(now())
  updated_at          DateTime            @updatedAt
  Campaign            CampaignOld[]
  File                File[]
  Portfolio           Portfolio[]
  ThreadParticipant   ThreadParticipant[]
  Message             Message[]
  partner             Partner[]

  @@map("users")
}

model ContentHQ {
  id                             String        @id @default(uuid())
  title                          String
  campaign                       String?
  product                        String?
  stakeholder                    String?
  posting_quality                String?
  google_drive_files             String?
  playbook_link                  String?
  uppromote_conversion           Int           @default(0)
  asset_status                   String?
  month_uploaded                 DateTime?
  REVO_pinterest                 String?       @default("not-posted")
  pin_accounts_used              String?       @default("not-posted")
  pinterest_PIN_click            Int           @default(0)
  pinterest_view                 Int           @default(0)
  REVO_instagram                 String?
  IG_like                        Int           @default(0)
  IG_comment                     Int           @default(0)
  IG_share                       Int           @default(0)
  IG_view                        Int           @default(0)
  IG_social_sets_used            String?
  partner_IG_link                String?
  REVO_twitter                   String?       @default("not-posted")
  REVO_tiktok                    String?       @default("not-posted")
  REVO_TT_view                   Int           @default(0)
  tiktok_accounts_used           String?       @default("not-posted")
  partner_tiktok_link            String?       @default("not-posted")
  partner_TT_like                Int           @default(0)
  partner_TT_comments            Int           @default(0)
  partner_TT_comment             String?
  partner_TT_share               Int           @default(0)
  partner_TT_view                Int           @default(0)
  partner_TT_save                Int           @default(0)
  TT_dummy_account_used          String?
  YT_account_used                String?       @default("not-posted")
  partner_YT_link                String?       @default("not-posted")
  partner_YT_like                Int           @default(0)
  partner_YT_comment             Int           @default(0)
  partner_YT_view                Int           @default(0)
  partner_YT_save                Int           @default(0)
  REVO_clubrevo_youtube          String?       @default("not-posted")
  REVO_youtube                   String?       @default("not-posted")
  YT_clubrevo_like               Int           @default(0)
  YT_clubrevo_view               Int           @default(0)
  YT_REVOMADIC_like              Int           @default(0)
  YT_REVOMADIC_comment           Int           @default(0)
  YT_REVOMADIC_share             Int           @default(0)
  YT_REVOMADIC_view              Int           @default(0)
  creator_status                 String?
  profile                        String?
  posting_status                 PostingStatus @default(NOT_POSTED)
  partner_hq                     String?
  portfolio                      String?
  contributed_engagement         Int           @default(0)
  by_tags                        String?
  by_city                        String?
  AI_internet_search             String?
  facilities_contributed_content String?
  image                          String?
  video                          String?
  created_at                     DateTime      @default(now())
  updated_at                     DateTime      @updatedAt

  @@map("content_HQ")
}

model CampaignGroup {
  id          String     @id @default(uuid())
  name        String
  slug        String
  description String?
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  campaigns   Campaign[]

  @@map("campaign_groups")
}

model Campaign {
  id                   String           @id @default(uuid())
  name                 String
  slug                 String
  campaign_group_id    String
  guideline            String?
  campaign_image       String?
  content_engagement   Int              @default(0)
  content_hq           String?
  note                 String?
  stakeholder          String?
  campaign_status      CampaignStatus   @default(UPCOMING)
  retail_partners      String?
  proposed_partners    String?
  live_partners        String?
  contributed_partners String?
  image_gallery        String[]         @default([])
  video_gallery        String[]         @default([])
  budget               Float?
  total_expense        Float?
  campaign_ROI         String?
  start_date           DateTime?
  end_date             DateTime?
  description          String?
  spaces               String?
  product_expense      Float?
  campaign_progress    CampaignProgress @default(NOT_APPROVED)
  created_at           DateTime         @default(now())
  updated_at           DateTime         @updatedAt

  campaign_group CampaignGroup @relation(fields: [campaign_group_id], references: [id])

  @@map("campaigns")
}

model CampaignOld {
  id                   String            @id @default(uuid())
  name                 String
  slug                 String
  description          String?
  start_date           DateTime?
  end_date             DateTime?
  status               CampaignStatusOld
  thumbnail            String?
  stakeholder          String?
  goal                 String?
  partner_compensation Int               @default(0)
  partner_deliverables String?
  contributed_partners String?
  prospected_partners  String?
  content_HQ           String?
  content_guidelines   String?
  image_inspiration    String?
  video_inspiration    String?
  content_engagement   Int               @default(0)
  product_expense      Int               @default(0)
  partner_expense      Int               @default(0)
  social_platforms     Json?
  featured             Boolean           @default(false)
  user_id              String
  created_at           DateTime          @default(now())
  updated_at           DateTime          @updatedAt

  created_by User @relation(fields: [user_id], references: [id])

  @@map("campaign_HQ")
}

model Partner {
  id                                      String                @id @default(uuid())
  name                                    String
  email                                   String?
  phone                                   String?
  whatsapp                                String?
  profile_image                           String?
  city                                    String?
  state                                   String?
  country                                 String?
  mailing_address                         String?
  website                                 String?
  instagram                               String?
  instagram_following                     Int                   @default(0)
  tiktok                                  String?
  tiktok_following                        Int                   @default(0)
  youtube                                 String?
  youtube_following                       Int                   @default(0)
  x                                       String?
  x_following                             Int                   @default(0)
  facebook                                String?
  facebook_following                      Int                   @default(0)
  pinterest                               String?
  pinterest_following                     Int                   @default(0)
  snapchat                                String?
  snapchat_following                      Int                   @default(0)
  linkedin                                String?
  linkedin_connection                     Int                   @default(0)
  hourly_rate                             Float?
  partner_IG_rate                         Float?
  partner_TT_rate                         Float?
  partner_YT_rate                         Float?
  partner_UGC_rate                        Float?
  partner_360_rate                        Float?
  contract                                String?
  tags                                    String?
  products                                String?
  contributed_campaigns                   String?
  live_campaign                           String?
  profile_category                        ProfileCategory?
  current_status                          PartnerCurrentStatus?
  profile_status                          ProfileStatus?
  stakeholder                             String?
  total_audience                          Int?
  sourced_from                            String?
  partner_gallery                         String[]              @default([])
  booking_link                            String?
  age_bracket                             String?
  note                                    String?
  affiliate_platform                      AffiliatePlatform?
  medium                                  String?
  soundcloud                              String?
  spotify                                 String?
  open_to_gifting                         Boolean               @default(false)
  services                                String?
  portfolio                               String?
  case_studies                            String?
  testimonials                            String?
  production_hq                           String?
  proposals                               String?
  representation                          String?
  occupation                              String?
  payment_link                            String?
  client                                  String?
  podcast                                 String?
  refusal_reason                          String?
  twitch                                  String?
  revo_amazon_order_confirmation_number   String?
  amazon_review_link                      String?
  amazon_review_cupper                    String?
  amazon_review_the_pill                  String?
  amazon_storefront                       String?
  campaign_month                          DateTime?
  deliverables                            String?
  google_drive_files                      String?
  revo_IG_post                            String?
  journey_step                            PartnerJourneyStep?
  amount_paid                             Float?
  total_contributed_engagement_by_content Int?
  platform_deliverables                   SocialPlatform?
  platform                                SocialPlatform[]      @default([])
  revo_offer                              String?
  user_id                                 String
  remaining_credits                       Float?
  TT_post                                 String?
  YT_post                                 String?
  total_ROI                               Float?
  UGC_payment_status                      PaymentStatus?
  UGC_retainer_amount                     Float?
  UGC_tiktok_link                         String?
  partner_post_view                       Int?
  estimated_taxes                         Float?
  shipping_FBA_fee_gifted_partner         Float?
  paypal_fee                              Float?
  amazon_referral_fee                     Float?
  amazon_order_total                      Float?
  AI_profile                              String?
  amazon_tax                              Float?
  amazon_kickback                         Float?
  month_sourced                           DateTime?
  second_payment_date                     DateTime?
  client_status                           ClientStatus?
  facilities                              String?
  record_id                               String?
  record_id_text                          String?
  receipts                                String[]              @default([])
  destinations                            String?
  revo_content_performance                String?
  proposed_campaigns                      String?
  media_kit                               String[]              @default([])
  revo_counter_offer                      String?
  amazon_review_walking_pad_pro           String?
  amazon_review_walking_pad_standard      String?
  amazon_review_oil                       String?
  amazon_review_soothing_cream            String?
  amazon_review_beauty_wand               String?
  open_to_whitelisting                    Boolean               @default(false)
  created_at                              DateTime              @default(now())
  updated_at                              DateTime              @updatedAt

  created_by User @relation(fields: [user_id], references: [id])

  @@map("partners")
}

model File {
  id         String   @id @default(uuid())
  name       String
  alt_text   String
  type       String
  size       Int
  width      Int
  height     Int
  path       String
  bucket_id  String
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  uploaded_by User @relation(fields: [user_id], references: [id])

  @@map("files")
}

model OTP {
  id         String   @id @default(uuid())
  email      String
  otp        Int      @unique
  expires_at String
  created_at DateTime @default(now())

  @@map("otp")
}

model Portfolio {
  id                        String    @id @default(uuid())
  project_title             String
  slug                      String
  category                  String?
  video_url                 String?
  hero_image                String?
  field_image               String?
  thumbnail                 String?
  vertical_gallery_images   String[]  @default([])
  horizontal_gallery_images String[]  @default([])
  date                      DateTime?
  short_description         String?
  full_description          String?
  state                     String?
  partner_hq                String?
  featured                  Boolean   @default(false)
  user_id                   String
  created_at                DateTime  @default(now())
  updated_at                DateTime  @updatedAt

  created_by User @relation(fields: [user_id], references: [id])

  @@map("portfolios")
}

model Thread {
  id           String              @id @default(uuid())
  type         ThreadType          @default(DIRECT)
  name         String? // Optional name for the thread
  member_count Int                 @default(0) // Member count for the thread
  unread_count Int                 @default(0)
  created_at   DateTime            @default(now())
  updated_at   DateTime            @updatedAt
  participants ThreadParticipant[]
  messages     Message[]

  @@map("threads")
}

model ThreadParticipant {
  id        String @id @default(uuid())
  thread_id String
  user_id   String

  thread Thread @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [user_id], references: [email], onDelete: Cascade)

  @@unique([thread_id, user_id])
  @@map("thread_participants")
}

model Message {
  id                String      @id @default(uuid())
  thread_id         String
  author_id         String
  type              MessageType @default(TEXT)
  content           String?
  file_url          String?
  parent_message_id String?
  read_status       Boolean     @default(false)
  is_edited         Boolean     @default(false)
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt

  thread   Thread    @relation(fields: [thread_id], references: [id], onDelete: Cascade)
  author   User      @relation(fields: [author_id], references: [email])
  parent   Message?  @relation("MessageToParent", fields: [parent_message_id], references: [id])
  children Message[] @relation("MessageToParent")

  @@map("messages")
}

enum ThreadType {
  DIRECT
  GROUP
}

enum MessageType {
  TEXT
  FILE
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

enum PostingStatus {
  POSTED
  NOT_POSTED
}

enum CampaignStatusOld {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

enum CampaignStatus {
  UPCOMING
  ACTIVE
  PAUSED
  NEEDS_CASE_STUDY
  NEEDS_PARTNERS
  ONBOARDING_PARTNERS
}

enum PortfolioTypes {
  VLOGS
  ECOMMERCE
  FASHION
  BRANDING
  UGC
  MUSIC
  BW
  CREATORS
  BEAUTY
  PUBLICATIONS
  SPORT
  PORDUCTS
  SWIM
  COMMERCIAL
  LIFESTYLE
  PORTRAITURE
  FILM
  EVENTS
  MOOD
  HOME
}

enum PortfolioStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

enum ProfileCategory {
  MODEL
  CREATOR
  PHOTOGRAPHER
  REVIEW_PARTNER
  B2B
  BLOG_OR_REVIEWER
  SPA
}

enum PartnerCurrentStatus {
  GATHER_RATES
  CONTRACT_FULFILLED
  INVITE_TO_PROGRAM
  NEEDS_APPROVAL
  OUT_OF_COUNTRY
  ACTIVE
  INACTIVE
  NOT_APPROVED
  UNRESPONSIVE
  OUTREACH
  EMAIL_READY
  AMAZON_REVIEW_COMPLETE
  FOLLOW_UP
  WAITLISTED
  RATE_TOO_HIGH
  NOT_STARTED
  REJECTED_OFFER
  AWAITING_AMAZON_REBATE
  VOID_CONTRACT
  IN_CONVERSATION
  DM_OUTREACHED
  UP_NEXT
  DONE
  DO_NOT_CONTRACT
}

enum CampaignProgress {
  GATHER_RATES
  REVIEW_RATES
  APPROVED_FOR_CAMPAIGN
  IN_NEGOTIATION
  AWAITING_SHIPMENT
  AWAITING_DELIVERABLES
  CONTENT_REVIEW
  AWAITING_PARTNER_POST
  APPROVED_FOR_PAYMENT
  COMPLETE
  NOT_APPROVED
  ALL_PARTNERS
}

enum AffiliatePlatform {
  LEVANTA
  SHARE_A_SALE
  SQUAREDANCE
}

enum ProfileStatus {
  PROSPECT
  ACTIVE
  OFFLINE
  NEEDS_ATTENTION
  ACCREDITED
  INVITE_FOR_VERIFICATION
  VERIFIED
  LEVEL_0
  NEEDS_PROFILE_IMAGE
  UPDATE_RATES
  GATHER_RATES
}

enum PartnerOccupation {
  SOCIAL_INFLUENCER
  NUTRITIONIST
  FITNESS_COACH
  FITNESS_TRAINER
  CONTENT_CREATOR
  DOCTOR
  MODEL
  PHYSICAL_THERAPIST
  ATHLETE
  COMEDIAN
  FITNESS_DIGITAL_CREATOR
  ENTREPRENEUR
  DIGITAL_CREATOR
  FASHION_MODEL
  EVENT_ORGANIZER
  VIDEO_CREATOR
  NINTENDO_AMBASSADOR
  CHEF
  FITNESS_MODEL
  MASSAGE_THERAPIST
  FITNESS_CONSULTANT
  ARTIST
}

enum PartnerJourneyStep {
  PROSPECTED
  GATHER_RATES
  RATES_GATHERED
  AMAZON_REBATE
  AWAITING_AMAZON_REVIEW
  AMAZON_REVIEW_COMPLETE
  AWAITING_UGC
  JOURNEY_COMPLETE
  SOCIAL_POST
  IN_DISPUTE
  AMAZON_REVIEW_FLAGGED
}

enum SocialPlatform {
  INSTAGRAM
  YOUTUBE
  TIKTOK
  FACEBOOK
  PINTEREST
  WEBSITE
  TWITCH
  TWITTER
  WEB_BLOGGER
  SNAPCHAT
}

enum PaymentStatus {
  DUE
  PAID
  HALF_PAID
}

enum ClientStatus {
  APPROVED
  NOT_APPROVED
  NEEDS_REVIEW
  GIFTING_ONLY
}
